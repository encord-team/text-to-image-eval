[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = ["Cord Technologies Limited <hello@encord.com>"]
description = "Working with multiple CLIP models"
name = "clip-eval"
readme = "README.md"
version = "0.1.0"
packages = [{include = "clip_eval", from = "."}]

[tool.poetry.dependencies]
autofaiss = "^2.17.0"
av = "^11.0.0"
datasets = "^2.17.0"
encord = "^0.1.108"
pillow = "^10.2.0"
pydantic = "^2.6.1"
python = "^3.11"
python-dotenv = "^1.0.1"
scikit-learn = "^1.4"
torch = "^2.2.0"
torchvision = "^0.17.0"
transformers = "^4.37.2"
umap-learn = "^0.5.5"
matplotlib = "^3.8.2"
typer = "^0.9.0"
inquirerpy = "^0.3.4"
tabulate = "^0.9.0"
sentencepiece = "^0.2.0"
protobuf = "^4.25.3"
open-clip-torch = "^2.24.0"
natsort = "^8.4.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = "^0.2.1"
toml-sort = "^0.23.1"
pre-commit = "^3.6.1"
pyfzf = "^0.3.1"
ipython = "^8.22.1"
ipdb = "^0.13.13"

[tool.poetry.scripts]
clip-eval = "clip_eval.cli.main:cli"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
# ignore = [
# "B007",  # Loop control variable {name} not used within loop body
# "E501",  # Checks for lines that exceed the specified maximum character length
# "E741"  # Ambiguous variable name: {name} (e.g. allow short names in one-line list comprehensions)
# ]
select = ["B", "E", "F", "I", "UP"]
ignore = ["UP007"]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
